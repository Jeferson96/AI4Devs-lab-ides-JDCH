// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  firstName String
  lastName  String
  phone     String
  address   String
  role      Role       @relation(fields: [roleId], references: [id])
  roleId    Int
  sessions  Session[]
  candidates Candidate[]

  @@map("users")
}

model Role {
  id       Int    @id @default(autoincrement())
  roleName String
  users    User[]

  @@map("roles")
}

model Session {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  token     String   @unique
  expiresAt DateTime

  @@map("sessions")
}

model Candidate {
  id         Int          @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String       @unique
  phone      String
  address    String
  createdBy  User        @relation(fields: [userId], references: [id])
  userId     Int
  education  Education[]
  experience Experience[]
  documents  Document[]

  @@map("candidates")
}

model Education {
  id           Int       @id @default(autoincrement())
  degree       String
  institution  String
  startDate    DateTime
  endDate      DateTime
  candidate    Candidate @relation(fields: [candidateId], references: [id])
  candidateId  Int

  @@map("education")
}

model Experience {
  id          Int       @id @default(autoincrement())
  position    String
  company     String
  startDate   DateTime
  endDate     DateTime
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int

  @@map("experience")
}

model Document {
  id          Int       @id @default(autoincrement())
  filePath    String
  fileType    String
  uploadDate  DateTime  @default(now())
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int

  @@map("documents")
}